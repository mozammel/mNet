apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'rebel'

println "PROJECT=" + project.name

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()

        maven { url "http://download.java.net/maven/2" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.9'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
        classpath 'org.zeroturnaround:gradle-jrebel-plugin:1.1.2'
    }
}


repositories {
    mavenCentral()
    mavenLocal()

    maven { url 'http://repo.spring.io/plugins-release' }
}


dependencies {
    def tomcatVersion = '7.0.54'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    compile 'org.springframework:spring-core:4.0.5.RELEASE'
    compile 'org.springframework:spring-webmvc:4.0.5.RELEASE'
    compile 'org.springframework:spring-orm:4.0.5.RELEASE'

    compile 'org.springframework.security:spring-security-web:3.2.4.RELEASE'
    compile 'org.springframework.security:spring-security-config:3.2.4.RELEASE'
    compile 'org.springframework.security:spring-security-taglibs:3.2.4.RELEASE'

    compile 'org.thymeleaf:thymeleaf:2.1.3.RELEASE'
    compile 'org.thymeleaf:thymeleaf-spring4:2.1.3.RELEASE'
    compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.5'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.1.RELEASE'

    compile 'org.hibernate:hibernate-entitymanager:4.3.5.Final'
    compile 'org.hibernate:hibernate-ehcache:4.3.5.Final'
    compile 'mysql:mysql-connector-java:5.1.30'
    compile 'c3p0:c3p0:0.9.1.2'
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'org.springframework.data:spring-data-jpa:1.7.0.RELEASE'
    compile 'org.hibernate:hibernate-validator:5.0.1.Final'
    compile 'com.h2database:h2:1.4.179'

    compile 'org.slf4j:slf4j-api:1.7.5'
    runtime 'org.slf4j:slf4j-log4j12:1.7.5'

    testCompile 'org.springframework:spring-test:4.0.5.RELEASE'
    testCompile 'junit:junit:4.11'
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile 'org.activiti:activiti-engine:5.15.1'
    testCompile 'org.glassfish.web:javax.el:2.2.6'

    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
}

test {
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}

task deployWar() {
    def tomcatHome = '/usr/local/tomcat7/webapps'
    doLast {
        logger.lifecycle("Going to deploy MediNetServices into ${tomcatHome} from ${libsDir.getPath()}")

        copy {
            from libsDir
            into "${tomcatHome}"
            include 'MediNetServices.war'
        }
    }
}
war.dependsOn(generateRebel)
deployWar.dependsOn(war)

task wrapper(type: Wrapper) { gradleVersion = '1.11' }

tomcatRunWar.contextPath = ''

